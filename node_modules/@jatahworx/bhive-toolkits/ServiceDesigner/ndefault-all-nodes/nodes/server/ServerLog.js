let BaseComponent = require('@jatahworx/bhive-toolkits').BaseComponent;

module.exports = class ServerLog extends BaseComponent {
    constructor(constructorOptions) {
        super(constructorOptions.id, constructorOptions.name, "neutrinos_service_designer_ServerLog", "ServerLog");
        this.logObject = constructorOptions.logObject;
        this.logLevel = constructorOptions.logLevel;
		this.functionName = constructorOptions.functionName;
        this.viewType = 'server';
    }

    get logObject() {
        return this._logObject;
    }

    set logObject(logObject) {
        this._logObject = logObject;
    }

    get logLevel() {
        return this._logLevel;
    }

    set logLevel(logLevel) {
        this._logLevel = logLevel;
    }

    get functionName() {
        return this._functionName;
    }

    set functionName(functionName) {
        this._functionName = functionName;
    }


    generateImports(rootPaths) {
        return [
            {
                library: 'fast-safe-stringify',
                alias: 'safeStringify',
            }
        ]
    }

    generateSnippet() {
        let logstr = `let logobj: any = ${this.logObject};
        if(logobj instanceof Error) {
            log.${this.logLevel}(logobj);
        }
        else {
            log.${this.logLevel}(safeStringify.default(logobj));
        }`;
        return logstr;
	}
	
	getCallTemplate(){
        return `this.${this.functionName}(bh);`;
    }
};