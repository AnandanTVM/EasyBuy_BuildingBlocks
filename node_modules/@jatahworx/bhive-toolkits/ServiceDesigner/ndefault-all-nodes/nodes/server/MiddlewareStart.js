let BaseComponent = require("@jatahworx/bhive-toolkits").BaseComponent;
// if user wants to set data use res.data -> passed to the next middleware
module.exports = class MiddlewareStart extends BaseComponent {
  constructor(constructorOptions) {
    super(constructorOptions.id, constructorOptions.name, "neutrinos_service_designer_MiddlewareStart", "MiddlewareStart");
    this.middlewareName = constructorOptions.name;
	this.originalFunctionName = constructorOptions.functionName;
    this.mwFunctionName = `mw_${this.middlewareName}`;
    this.serviceName = constructorOptions.serviceName;
    this.viewType = 'server';
    this.nodeType = BaseComponent.nodeTypes.START;
  }

  generateSnippet() {
	  const nodeSnippet = `let ${this.mwFunctionName}: Middleware = new Middleware(this.serviceName, '${this.middlewareName}', async (req, res, next) => {
            let bh = {};
            try {
              bh = this.sdService.__constructDefault({local: {}}, req, res, next);
              //appendnew_next_${this.originalFunctionName}
            }
            catch (e) {
              return await this.errorHandler(bh, e, '${this.id}');
            }
          });
		  this.generatedMiddlewares[this.serviceName]['${this.middlewareName}'] = ${this.mwFunctionName};`;
	  return ({
		  nodeSnippet,
		  noWrap: true
	  });
  }

  getErrorTemplate() {
    return `
      export class errorCheck {
          sampleMethod() {
              //appendnew_node
          }
      }
      `
    }
}