let BaseComponent = require("@jatahworx/bhive-toolkits").BaseComponent;
let SRDCodeGenUtil = require("@jatahworx/bhive-toolkits").SRDCodeGenUtil;
module.exports = class Environment extends BaseComponent {
    constructor(constructorOptions) {
        super(constructorOptions.id, constructorOptions.name, "neutrinos_service_designer_environment", "Environment");
        this.envMaps = constructorOptions.envMaps;
        this.viewType = 'client';
    }

    set envMaps(envMaps) {
        this.__envMapsArray = envMaps instanceof Array ? envMaps : [];
    }

    get envMaps() {
        return this.__envMapsArray;
    }

    generateSnippet() {
        return this.__envSnippet();
    }

    __envSnippet() {
        let snippet = '';
        const typedIpVal = new SRDCodeGenUtil().getValueFromTypedInput;
        this.envMaps.forEach(envMap => {
            snippet += `${envMap.flowVar.value ? `${typedIpVal(envMap.flowVar)} = bh.system.environment.properties.${envMap.envProperty};` : ''}`;
        });
        return snippet;
    }

};