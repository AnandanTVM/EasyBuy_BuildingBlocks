let BaseComponent = require("@jatahworx/bhive-toolkits").BaseComponent;
const SRDCodeGenUtil = require("@jatahworx/bhive-toolkits").SRDCodeGenUtil;

module.exports = class SnackBar extends BaseComponent {
    constructor(constructorOptions) {
        super(constructorOptions.id, constructorOptions.name, 'neutrinos_service_designer_snackBar', 'SnackBar');
        this.getValueFromTypedInput = (new SRDCodeGenUtil()).getValueFromTypedInput;

        this.nodeOptions = constructorOptions;
        this.viewType = 'client';
    }
    /*
        const sbRef = this.matSnackBar.open(message || 'some message', action || 'close', {
        // announcementMessage: 'asdasd',
        // politeness: 'off',
        // direction: 'ltr',
        // viewContainerRef: this.divVcr // Check if this is required
            data: {
                a: 90
            },
            duration: duration,
            horizontalPosition: 'end',
            verticalPosition: 'top',
            panelClass: undefined,
        }); 
     */

    init() {
        this.message = this.nodeOptions.message;
        this.action = this.nodeOptions.action;
        this.duration = this.nodeOptions.duration;
        this.horizontalPosition = this.nodeOptions.horizontalPosition ? { type: 'str', value: this.nodeOptions.horizontalPosition } : this.nodeOptions.horizontalPositionMap;
        this.verticalPosition = this.nodeOptions.verticalPosition ? { type: 'str', value: this.nodeOptions.verticalPosition } : this.nodeOptions.verticalPositionMap;
        this.panelClass = this.nodeOptions.panelClass;
        this.direction = this.nodeOptions.direction;
    }

    generateSnippet() {
        return this.__snackBarSnippet();
    }

    __snackBarSnippet() {
        this.init();
        const sbSnippet = `this.matSnackBar.open(${this.message}, ${this.action}, {
                ${this.duration}
                direction: '${this.direction}',
                ${this.horizontalPosition}
                ${this.verticalPosition}
                ${this.panelClass}
            }); `;
        return sbSnippet;
    }

    set panelClass(panelClass) {
        const panelClassList = this.getValueFromTypedInput(panelClass);
        if (panelClass.value && panelClassList) {
            const splitSnippet = ` ${panelClassList}.split(',').map((v:string) => v.trim()).filter(Boolean)`;
            if (panelClass.type == 'str') {
                this.__panelClass = `panelClass: ${splitSnippet},`;
            } else {
                this.__panelClass = `panelClass: ${panelClassList} && typeof ${panelClassList} === 'string' ? ${splitSnippet} : undefined,`;
            }
        } else {
            this.__panelClass = '';
        }
    }
    get panelClass() {
        return this.__panelClass;
    }

    /*this.message = constructorOptions.message;*/
    set message(msg) {
        this.__snackbarMessage = this.getValueFromTypedInput(msg) || '""';
    }
    get message() {
        return this.__snackbarMessage;
    }

    /*this.action = constructorOptions.action*/
    set action(a) {
        this.__action = this.getValueFromTypedInput(a) || '""';
    }
    get action() {
        return this.__action;
    }


    /*this.duration = constructorOptions.duration;*/
    set duration(d) {
        const durationVal = this.getValueFromTypedInput(d) || 1000;
        this.__duration = durationVal ? `duration: ${durationVal},` : '';
    }
    get duration() {
        return this.__duration;
    }

    /*this.horizontalPosition = constructorOptions.horizontalPosition|Map */
    set horizontalPosition(hPos) {
        const hPosVal = this.getValueFromTypedInput(hPos);
        this.__hPos = hPosVal ? `horizontalPosition: ${hPosVal},` : '';
    }
    get horizontalPosition() {
        return this.__hPos;
    }

    /*this.verticalPosition = constructorOptions.verticalPosition|Map */
    set verticalPosition(vPos) {
        const vPosVal = this.getValueFromTypedInput(vPos);
        this.__vPos = vPosVal ? `verticalPosition: ${vPosVal},` : '';
    }
    get verticalPosition() {
        return this.__vPos;
    }
};