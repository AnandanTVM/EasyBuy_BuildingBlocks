let BaseComponent = require("@jatahworx/bhive-toolkits").BaseComponent;
let SRDUtil = require("@jatahworx/bhive-toolkits").SRDCodeGenUtil;
module.exports = class YML extends BaseComponent {
    constructor(constructorOptions) {
        super(constructorOptions.id, constructorOptions.name, "neutrinos_service_designer_YML", "YML");

        let srdUtil = new SRDUtil();
        if (constructorOptions.inputMapping) {
            this.inputMapping = srdUtil.getValueFromTypedInput(constructorOptions.inputMapping);
        }
        if (constructorOptions.resultMapping) {
            this.resultMapping = srdUtil.getValueFromTypedInput(constructorOptions.resultMapping);
        }

        this.errorMapping = constructorOptions.errorMapping;
        this.viewType = 'server';
    }

    generateImports(rootPaths) {
        return [
            {
                library: rootPaths.pathToUtilsRoot + '/ndefault-yml/YML/YMLService',
                modules: [
                    'YMLService'
                ]
            }
        ]
    }

    generateSnippet() {
        let snippet = '';
        if (this.resultMapping) {
			snippet = `const p = YMLService.getInstance();
				${this.resultMapping} = await p.yml(${this.inputMapping});`;
        } else {
			snippet = `const p = YMLService.getInstance();
				${this.inputMapping} = await p.yml(${this.inputMapping});`;
        }
        return snippet;
    }

    get inputMapping() {
        return this.__inputMapping;
    }
    set inputMapping(inputMapping) {
        this.__inputMapping = inputMapping;
    }

    get resultMapping() {
        return this.__resultMapping;
    }

    set resultMapping(resultMapping) {
        this.__resultMapping = resultMapping;
    }

}
