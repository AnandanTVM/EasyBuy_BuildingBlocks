'use strict';
let Attribute = require('../../core/Attributes');
let Component = require('../../core/Component');

module.exports = class TextArea extends Component {
  constructor() {
    const name = 'NG-TextArea';
    const designerTemplate = `<div class=\"ad-text-area non-dropable-comp-border form-control-comp\">
                                <span class="component-placeholder">Text Area</span>
                              </div>`;
    const paletteTemplate = 'Text Area';
    const componentLabel = 'Text Area';
    const templateUrl = 'articles/#!components-guide-7/text-area';

    super({
      name: name,
      designerTemplate: designerTemplate,
      paletteTemplate: paletteTemplate,
      componentLabel: componentLabel,
      templateUrl: templateUrl
    }
    );
    super.setType(Component.COMPONENT_TYPE_TITLES.FORM_CONTROLS.val);

    super.addAttribute(new Attribute({
      key: 'placeholder',
      value: '',
      type: 'kv',
      useAsLabel: true
    }));
    super.addAttribute(new Attribute({
      key: 'value',
      value: '',
      type: 'kv'
    }));
    super.addAttribute(
      new Attribute({
        key: '[required]',
        value: 'false',
        type: 'kv'
      })
    );
    super.addAttribute(new Attribute({
      key: '[appearance]',
      value: '',
      type: 'kv'
    }));
    super.addAttribute(
      new Attribute({
        key: '[(ngModel)]',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(new Attribute({
      key: 'color',
      value: '',
      type: 'kv'
    }));
    super.addAttribute(new Attribute({
      key: 'name',
      value: '',
      type: 'kv'
    }));
    super.addAttribute(
      new Attribute({
        key: '[readonly]',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: '[disabled]',
        value: '',
        type: 'kv'
      })
    );
  }
  get template() {
    const template = `<mat-form-field %style% %class% %color% %[appearance]%>
    <textarea matInput %[(ngModel)]% %bCustomProps% %name% %placeholder% %value% %[required]% %[readonly]% %[disabled]%></textarea>
  </mat-form-field>`;
    return template;
  }
  set template(templateString) { }
};