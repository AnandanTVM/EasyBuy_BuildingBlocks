'use strict';
let Attribute = require('../../core/Attributes');
let Component = require('../../core/Component');

module.exports = class Checkbox extends Component {
  constructor() {
    const name = 'NG-checkbox';
    const designerTemplate = `<div class=\"non-dropable-comp-border form-control-comp\">
                                    <div class="ad-checkbox icon-size height-100"></div>
                                  </div>`;
    const paletteTemplate = 'Checkbox';
    const componentLabel = 'Checkbox';
    const templateUrl =
      'articles/#!components-guide-7/checkbox';

    super({
      name: name,
      designerTemplate: designerTemplate,
      paletteTemplate: paletteTemplate,
      componentLabel: componentLabel,
      templateUrl: templateUrl
    }
      
    );
    super.addAttribute(
      new Attribute({
        key: 'componentLabel',
        value: 'Checkbox',
        type: 'kv',
        useAsLabel: true
      })
    );
    super.addAttribute(new Attribute({
      key: 'value',
      value: '',
      type: 'kv'
    }));
    super.addAttribute(
      new Attribute({
        key: '[required]',
        value: 'false',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: '[(ngModel)]',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(new Attribute({
      key: 'label',
      value: '',
      type: 'a'
    }));
    super.addAttribute(new Attribute({
      key: 'id',
      value: '',
      type: 'kv'
    }));
    super.addAttribute(new Attribute({
      key: 'name',
      value: '',
      type: 'kv'
    }));
    super.addAttribute(
      new Attribute({
        key: 'labelPosition',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(new Attribute({
      key: 'color',
      value: '',
      type: 'kv'
    }));
    super.addAttribute(
      new Attribute({
        key: '[checked]',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: '(change)',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: '[disabled]',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: '[disableRipple]',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: '[indeterminate]',
        value: '',
        type: 'kv'
      })
    );
    super.setType(Component.COMPONENT_TYPE_TITLES.FORM_CONTROLS.val);
  }
  get template() {
    const template = `<mat-checkbox %style% %class% %[(ngModel)]% %id% %name% %(change)% %[checked]% %color% %labelPosition%  %value% %[required]%  %bCustomProps% %[disabled]% %[disableRipple]% %[indeterminate]%>%label%</mat-checkbox>`;
    return template;
  }
  set template(templateString) {}
};