'use strict';
let Attribute = require('../../core/Attributes');
let Component = require('../../core/Component');
/**
 * This component is deprecated as of bhive-toolkits version 7.2.1
 */
module.exports = class FileUpload extends Component {
  constructor() {
    const name = 'NG-FileUpload';
    const designerTemplate = `<div class=\"ad-file-upload file-upload-width non-dropable-comp-border form-control-comp\">
                                <div class="file-upload-icon height-100"></div>
                                <span class="component-placeholder file-upload-text">File Upload</span>
                              </div>`;
    const paletteTemplate = 'File Upload';
    const componentLabel = 'File Upload';
	const templateUrl = 'articles/#!components-guide-7/file-upload';
	const visible = false;

    super({
      name: name,
      designerTemplate: designerTemplate,
      paletteTemplate: paletteTemplate,
      componentLabel: componentLabel,
	  templateUrl: templateUrl,
	  // Deprecating this component
	  visible: visible
    });

    super.addAttribute(
      new Attribute({
        key: '[uploadOptions]',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: '(onsuccess)',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: '(onerror)',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: '[disabled]',
        value: '',
        type: 'kv'
      })
    );
    super.setType(Component.COMPONENT_TYPE_TITLES.OTHERS.val);
  }
  get template() {
    const template = `<n-file-upload %[uploadOptions]% %(onsuccess)% %(onerror)% %[disabled]% %bCustomProps%></n-file-upload>`;
    return template;
  }
  set template(templateString) {}
};