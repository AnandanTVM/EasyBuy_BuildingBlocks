'use strict';
let Attribute = require('../../core/Attributes');
let Component = require('../../core/Component');

module.exports = class RadioGroup extends Component {
  constructor() {
    const name = 'NG-RadioGroup';
    const designerTemplate = `<div class=\"drop ad-flex\" component-label="Radio Group"></div>`;
    const paletteTemplate = 'Radio Group';
    const componentLabel = 'Radio Group';
    const templateUrl = 'articles/#!components-guide-7/radio-group';

    super({
      name: name,
      designerTemplate: designerTemplate,
      paletteTemplate: paletteTemplate,
      componentLabel: componentLabel,
      templateUrl: templateUrl
    }
    );
    super.setType(Component.COMPONENT_TYPE_TITLES.FORM_CONTROLS.val);

    super.addAttribute(
      new Attribute({
        key: '[value]',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: '[(ngModel)]',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(new Attribute({
      key: 'name',
      value: '',
      type: 'kv'
    }));
    super.addAttribute(
      new Attribute({
        key: '[selected]',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: '(change)',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: '[labelPosition]',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: '[required]',
        value: 'false',
        type: 'kv'
      })
    );
    super.addAttribute(new Attribute({
      key: 'label',
      value: '',
      type: 'a'
    }));
  }
  get template() {
    const template = `<mat-radio-group %[value]% %style% %class% %[(ngModel)]% %bCustomProps% %name% %(change)% %[labelPosition]% %[selected]% %[required]%>%label%</mat-radio-group>`;
    return template;
  }
  set template(templateString) { }
};