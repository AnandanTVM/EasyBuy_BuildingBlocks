'use strict';
let Attribute = require('../../core/Attributes');
let Component = require('../../core/Component');

module.exports = class ExpansionPanel extends Component {
  constructor() {
    const name = 'NG-ExpansionPanel';
    const designerTemplate = `<div class=\"drop\" component-label="Expansion Panel"></div>`;
    const paletteTemplate = 'Expansion Panel';
    const componentLabel = 'Expansion Panel';

    const templateUrl =
      'articles/#!components-guide-7/expansion-panel';

    super({
      name: name,
      designerTemplate: designerTemplate,
      paletteTemplate: paletteTemplate,
      componentLabel: componentLabel,
      templateUrl: templateUrl
    }
     
    );

    super.addAttribute(new Attribute({
      key: '*ngFor',
      value: '',
      type: 'kv'
    }));
    super.addAttribute(
      new Attribute({
        key: '(opened)',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: '(closed)',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: 'hideToggle',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: '[expanded]',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: '(afterCollapse)',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: '(afterExpand)',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: '[disabled]',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: '(destroyed)',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(new Attribute({
      key: 'id',
      value: '',
      type: 'kv'
    }));
    super.setType(Component.COMPONENT_TYPE_TITLES.LAYOUT.val);
  }
  get template() {
    const template = `<mat-expansion-panel %*ngFor% %bCustomProps% %style% %class% %(opened)% %(closed)% %hideToggle% %[expanded]% %(afterCollapse)% %(afterExpand)% %[disabled]% %(destroyed)% %id%>
    </mat-expansion-panel>`;
    return template;
  }
  set template(templateString) {}
};