'use strict';
let Attribute = require('../../core/Attributes');
let Component = require('../../core/Component');

module.exports = class GaugeChart extends Component {
  constructor() {
    const name = 'NG-gauge-chart';
    const designerTemplate = `<div class=\"ad-gauge-chart ad-charts\" component-label="Gauge Chart"></div>`;
    const paletteTemplate = 'Gauge Chart';
    const componentLabel = 'Gauge Chart';
    const templateUrl =
      'articles/#!components-guide-7/ngx-gauge-chart';

    super({
      name: name,
      designerTemplate: designerTemplate,
      paletteTemplate: paletteTemplate,
      componentLabel: componentLabel,
      templateUrl: templateUrl
    }
     
    );

    super.addAttribute(
      new Attribute({
        key: '(select)',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: '[scheme]',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: '[results]',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: '[angleSpan]',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: '[startAngle]',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: '[units]',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: '[bigSegments]',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: '[smallSegments]',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(new Attribute({
      key: '[min]',
      value: '',
      type: 'kv'
    }));
    super.addAttribute(new Attribute({
      key: '[max]',
      value: '',
      type: 'kv'
    }));
    super.addAttribute(
      new Attribute({
        key: 'fxLayout',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(new Attribute({
      key: 'fxFlex',
      value: '',
      type: 'kv'
    }));
    super.addAttribute(new Attribute({
      key: '[view]',
      value: '',
      type: 'kv'
    }));
    super.addAttribute(
      new Attribute({
        key: '[customColors]',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: '[animations]',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: '[legend]',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: '[legendTitle]',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: '[showAxis]',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: '[axisTickFormatting]',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: '[tooltipDisabled]',
        value: '',
        type: 'kv'
      })
    );
    super.setType(Component.COMPONENT_TYPE_TITLES.NGX_CHARTS.val);
  }
  get template() {
    const template = `
    <div %fxFlex% %fxLayout%>
      <ngx-charts-gauge %bCustomProps% %[scheme]% %[results]% %[angleSpan]% %[startAngle]% %style% %[units]% %[bigSegments]% %[smallSegments]% %class% %[min]% %[max]% %(select)% %[view]% %[customColors]% %[animations]% %[legend]% %[legendTitle]% %[showAxis]% %[axisTickFormatting]% %[tooltipDisabled]%></ngx-charts-gauge>
    </div>`;
    return template;
  }
  set template(templateString) {}
};