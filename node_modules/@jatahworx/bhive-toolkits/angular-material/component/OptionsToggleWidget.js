"use strict";
let Attribute = require("../../core/Attributes");
let Component = require("../../core/Component");

module.exports = class OptionsToggleWidget extends Component {
  constructor() {
    const name = "NG-options-toggle-widget";
    const designerTemplate = `<div class=\"ad-button-toggle-group non-dropable-comp-border\" component-label="Button Toggle Group">
                                <div class=\"button-toggle-group-widget height-100\"></div>
                              </div>`;
    const paletteTemplate = "Button Toggle Group";
    const componentLabel = "Button Toggle Group";
    const templateUrl =
      "articles/#!components-guide-7/button-toggle-group";

    super({
      name: name,
      designerTemplate: designerTemplate,
      paletteTemplate: paletteTemplate,
      componentLabel: componentLabel,
      templateUrl: templateUrl,
      visible: false
    });
    super.setType(Component.COMPONENT_TYPE_TITLES.OTHERS.val);

    super.addAttribute(
      new Attribute({
        key: "[toggleOptions]",
        value: "",
        type: "kv"
      })
    );

    super.addAttribute(
      new Attribute({
        key: "[value]",
        value: "",
        type: "kv"
      })
    );

    super.addAttribute(
      new Attribute({
        key: "[align]",
        value: "",
        type: "kv"
      })
    );
    super.addAttribute(
      new Attribute({
        key: "[disabledIndex]",
        value: "",
        type: "kv"
      })
    );
    super.addAttribute(
      new Attribute({
        key: "[checkedIndex]",
        value: "",
        type: "kv"
      })
    );
    super.addAttribute(
      new Attribute({
        key: "(indexChange)",
        value: "",
        type: "kv"
      })
    );
    super.addAttribute(
      new Attribute({
        key: "(valueChange)",
        value: "",
        type: "kv"
      })
    );
  }
  get template() {
    const template = `<n-toggleoptions %style% %bCustomProps% %class% %[value]% %[toggleOptions]% %[align]% %[disabledIndex]% %[checkedIndex]% %(indexChange)% %(valueChange)%></n-toggleoptions>`;
    return template;
  }
  set template(templateString) { }
};
