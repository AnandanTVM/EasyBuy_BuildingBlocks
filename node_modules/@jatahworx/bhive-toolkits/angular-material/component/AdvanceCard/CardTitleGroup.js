'use strict';
let Attribute = require('../../../core/Attributes');
let AdvancedComponent = require("../../../core/AdvancedComponent");

module.exports = class CardHeader extends AdvancedComponent {
  constructor() {
    const name = 'ng-card-title-group';
    const designerTemplate = ` <ng-card-title-group slot="cards" class=\"display-block flex-row\" block-copy>
                                        <div class="flex-column flex-start flex-grow-1 padding-top">
                                            <div class=\"ad-card-header-title\">Title</div>
                                            <div class=\"ad-card-subtitle\">Subtitle</div>
                                        </div>
                                        <div class=\"ad-card-title-group ad-card-title-group-avatar flex-end flex-grow-1\"></div>
                                   </ng-card-title-group>`;
    const paletteTemplate = 'Card Title Group';
    const componentLabel = 'Card Title Group';

    const templateUrl = 'articles/#!components-guide-7/card';

    super({
      name,
      template: ``,
      designerTemplate,
      componentLabel,
      paletteTemplate,
      isAdvancedChild: true,
      templateUrl
    });

    this.template = `
        <mat-card-title-group %bCustomProps% %style% %class%>
            <mat-card-title>%title%</mat-card-title>
            <mat-card-subtitle>%subtitle%</mat-card-subtitle>
            %imageType%
        </mat-card-title-group>
        `

    super.addAttribute(new Attribute({
      key: 'title',
      value: 'Title',
      type: 'a'
    }));
    super.addAttribute(
      new Attribute({
        key: 'subtitle',
        value: 'Subtitle',
        type: 'a'
      })
    );
    super.addAttribute(new Attribute({
      key: 'imgSrc',
      value: '',
      type: 'kv'
    }));
    super.addAttribute(new Attribute({
      key: '[src]',
      value: '',
      type: 'kv'
    }));
    super.addAttribute(new Attribute({
      key: 'alt',
      value: '',
      type: 'kv'
    }));
    super.addAttribute(
      new Attribute({
        key: 'imgSecure',
        value: '',
        type: 'a'
      })
    );
    super.addAttribute(
      new Attribute({
        key: '[collectionName]',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: '[imageFilter]',
        value: '',
        type: 'kv'
      })
    );

    super.addAttribute(new Attribute({
      key: 'imageType',
      value: 'sm',
      type: 'dav',
      isVisibleForParent: true,
      templateUpdater: {
        postSave: (value, x, componentAttributes) => {
          let template;
          if (value == "sm") {
            template = `img mat-card-sm-image`
          } else if (value == "md") {
            template = `img mat-card-md-image`
          } else if (value == "lg") {
            template = `img mat-card-lg-image`
          }
          if (componentAttributes[4]._value) {
            template = template + " imgSrc" + '=' + '"' + componentAttributes[4]._value + '"';
          }
          if (componentAttributes[5]._value) {
            template = template + " [src]" + '=' + '"' + componentAttributes[5]._value + '"';
          }
          if (componentAttributes[6]._value) {
            template = template + " alt" + '=' + '"' + componentAttributes[6]._value + '"';
          }
          if (componentAttributes[7]._value) {
            template = template + " isSecure" + '=' + '"' + componentAttributes[7]._value + '"';
          }
          if (componentAttributes[8]._value) {
            template = template + " [collectionName]" + '=' + '"' + componentAttributes[8]._value + '"';
          }
          if (componentAttributes[9]._value) {
            template = template + " [imageFilter]" + '=' + '"' + componentAttributes[9]._value + '"';
          }
          return ("<" + template + ">");
        }
      }
    }));

    super.composeTemplate({
      styles: `:host {
              padding: 0.5em 1em;
              background: white;
              position: relative;
              border: 1px solid lightgrey;
              margin: 6px 25px !important;
              border-radius: 5px !important;
              color: #404041;
              }`
    })
  }
};