"use strict";
let Attribute = require("../../../core/Attributes");
let AdvancedComponent = require("../../../core/AdvancedComponent");

module.exports = class TableFilter extends AdvancedComponent {
  constructor() {
    const name = "ng-table-filter";
    const designerTemplate = `<ng-table-filter slot="table-filter" block-copy><span class="component-placeholder">Table Filter</span></ng-table-filter>`;
    const paletteTemplate = "Table Filter";
    super({
      name,
      designerTemplate,
      paletteTemplate,
      templateUrl: 'articles/#!components-guide-7/tables',
      componentLabel: 'Table Filter',
      visible: false
    });
    super.addAttribute(new Attribute({
      key: '(tableFilterFunction)',
      value: '',
      type: 'dav',
      attrDef: 'p',
      templateUpdater: {
        postSave: function (elementValue) {
          if (elementValue) {
            return `(keyup)=${elementValue}`;
          }
          return '';
        }
      }
    }));
    super.addAttribute(new Attribute({
      key: 'placeholder',
      value: 'Search',
      type: 'kv'
    }));
    super.addAttribute(new Attribute({
      key: 'layoutAlign',
      value: 'end',
      type: 'a'
    }));
    super.addAttribute(new Attribute({
      key: 'fxFlex',
      value: 'end',
      type: 'a'
    }));
    super.setType(AdvancedComponent.COMPONENT_TYPE_TITLES.NAVIGATION.val);
    super.composeTemplate({
      styles: `:host {
        position: relative;
        flex: 1 0 auto;
        min-width: 8em;
        min-height: 2em;
        border: 1px solid black;
        margin: 0 !important;
        border-radius: 0px !important;
        display: flex;
        }`
    });
  }

  get template() {
    return `
    <div fxLayout="row" %style% %class% fxLayoutAlign="%layoutAlign%">
      <div fxLayout="column" fxFlex="%fxFlex%">
        <mat-form-field fxFlex="100">
          <input matInput %(tableFilterFunction)% %placeholder% %bCustomProps%>
        </mat-form-field>
      </div>
    </div>
    `;
  }
  set template(templateString) {}
};
