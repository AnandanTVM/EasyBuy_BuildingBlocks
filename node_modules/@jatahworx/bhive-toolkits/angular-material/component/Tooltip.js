'use strict';
let Attribute = require('../../core/Attributes');
let Component = require('../../core/Component');

module.exports = class Tooltip extends Component {
  constructor() {
    const name = 'NG-Tooltip';
    const designerTemplate = `<div class=\"ad-tooltips non-dropable-comp-border form-control-comp\">
                                <div class="ad-tooltip-icon icon-size height-100"></div>
                              </div>`;
    const paletteTemplate = 'Tooltip';
    const componentLabel = 'Tooltip';
    const templateUrl = '/articles/#!components-guide/tooltip5'; // docs.neutrinos.co/
    super({
      name: name,
      designerTemplate: designerTemplate,
      paletteTemplate: paletteTemplate,
      componentLabel: componentLabel,
      templateUrl:templateUrl,
      visible: false
    }
    );
    super.setType(Component.COMPONENT_TYPE_TITLES.FORM_CONTROLS.val);
    super.addAttribute(
      new Attribute({
        key: 'Tooltip Text',
        value: '',
        type: 'a',
        useAsLabel: true
      })
    );
    super.addAttribute(
      new Attribute({
        key: 'matTooltip',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: 'matTooltipPosition',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: 'matTooltipShowDelay',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: 'matTooltipHideDelay',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: 'matTooltipClass',
        value: '',
        type: 'kv'
      })
    );
  }
  get template() {
    const template = `<span %bCustomProps%  %style% %class% %matTooltip% %matTooltipShowDelay% %matTooltipHideDelay% %matTooltipPosition% %matTooltipClass%>%Tooltip Text%</span>`;
    return template;
  }
  set template(templateString) {}
};