"use strict";
let AdvancedComponent = require("../../../core/AdvancedComponent");
let Attribute = require("../../../core/Attributes");

module.exports = class advanceButtonToggleGroup extends AdvancedComponent {
    constructor() {
        const name = "ng-button-toggle-group";
        const designerTemplate = `<ng-button-toggle-group onclick="click(event)" component-label class="non-dropable-comp-border ad-element flex-shrink-0 flex-grow-1">
                                    <ng-button-toggle n-adv-child></ng-button-toggle>                                    
                                        <div slot="add" class="ad-card-buttons">
                                            <div class="inline-block">
                                                <button id="addtogglebutton" class="add-child-button flex-column">Add toggle button</button>
                                            </div>
                                        </div>
                            </ng-button-toggle-group>`;
        const paletteTemplate = "Button Toggle Group";
        const componentLabel = 'Button Toggle Group';
        const templateUrl = "articles/#!components-guide-7/button-toggle";

        super({
            name,
            template: ``,
            designerTemplate,
            paletteTemplate,
            componentLabel,
            templateUrl
        });
        super.setType(AdvancedComponent.COMPONENT_TYPE_TITLES.LAYOUT.val);
        super.addAttribute(
            new Attribute({
                key: '[name]',
                value: '',
                type: 'kv'
            })
        );
        super.addAttribute(
            new Attribute({
                key: '[value]',
                value: '',
                type: 'kv'
            })
        );
        super.addAttribute(
            new Attribute({
                key: '[disabled]',
                value: '',
                type: 'kv'
            })
        );
        super.addAttribute(
            new Attribute({
                key: '[multiple]',
                value: '',
                type: 'kv'
            })
        );
        super.addAttribute(
            new Attribute({
                key: '[vertical]',
                value: '',
                type: 'kv'
            })
        );
        super.addAttribute(
            new Attribute({
                key: '(change)',
                value: '',
                type: 'kv',
            })
        );
        super.addAttribute(
            new Attribute({
                key: '[buttonToggleAppearance]',
                value: "'standard'",
                type: 'a'
            })
        );
        super.addAttribute(
            new Attribute({
                key: '[(ngModel)]',
                value: '',
                type: 'kv'
            })
        );
        super.composeTemplate({
            styles: `
            :host {
              display: flex;
              padding-top: 2rem;
              padding-bottom: 1rem;
              min-width: 20rem;
              flex-direction: column;
              align-self: start;
            }
           .parent_card {
             display: flex;
             flex-direction: row;
          }
          .chip-margin {
            margin-left: 0.8rem;
          }`,
            slotsTemplate: `   
            <div class="parent_card chip-margin">
              <slot name="buttontoggle"></slot>
            </div>
            <div class="parent_card">
              <slot id="addSlot" name="add"></slot>
            </div>
            `,
            onInit: function () { },
            onDestroy: function () { },
            customMethods: {
                click: function (e) {
                    if (e.target.id === "addtogglebutton") {
                        this.addChild("ng-button-toggle");
                    }
                }
            }
        });
    }
    get template() {
        const template = `
        <mat-button-toggle-group
            %style% %class%
            %[name]% %[value]% %[disabled]% %[multiple]% %[vertical]% %(change)% [appearance]=\"%[buttonToggleAppearance]%\" %[(ngModel)]%
            %bCustomProps%>
        </mat-button-toggle-group>`;
        return template;
    }
    set template(templateString) { }
}


