"use strict";
let Attribute = require("../../core/Attributes");
let Component = require("../../core/Component");
/**
 * Previously horizontal bar chart will now be displayed
 * as bar chart before of ng2-charts changes
 */
module.exports = class NgPolarAreaChart extends Component {
  constructor() {
    const name = "NG-ng-polcar-area-chart";
    const designerTemplate = `<div class=\"ad-polar-area-chart  ad-charts\" component-label="Polar Area Chart"></div>`;
    const paletteTemplate = "Polar Area Chart";
    const componentLabel = "Polar Area Chart";
    const templateUrl =
      "articles/#!components-guide-7/ng-polar-area-chart";

    super({
      name: name,
      designerTemplate: designerTemplate,
      paletteTemplate: paletteTemplate,
      componentLabel: componentLabel,
      templateUrl: templateUrl
    });
    super.setType(Component.COMPONENT_TYPE_TITLES.NG_CHARTS.val);

    super.addAttribute(
      new Attribute({
        key: "[data]",
        value: "",
        type: "kv"
      })
    );
    super.addAttribute(
      new Attribute({
        key: "[datasets]",
        value: "",
        type: "kv"
      })
    );
    super.addAttribute(
      new Attribute({
        key: "[labels]",
        value: "",
        type: "kv"
      })
    );
    super.addAttribute(
      new Attribute({
        key: "[options]",
        value: "",
        type: "kv"
      })
    );
    super.addAttribute(
      new Attribute({
        key: "[colors]",
        value: "",
        type: "kv"
      })
    );
    super.addAttribute(
      new Attribute({
        key: "[legend]",
        value: "",
        type: "kv"
      })
    );
    super.addAttribute(
      new Attribute({
        key: "(chartHover)",
        value: "",
        type: "kv"
      })
    );
    super.addAttribute(
      new Attribute({
        key: "(chartClick)",
        value: "",
        type: "kv"
      })
    );
    super.addAttribute(
      new Attribute({
        key: "fxLayout",
        value: "",
        type: "kv"
      })
    );
    super.addAttribute(
      new Attribute({
        key: "fxFlex",
        value: "200",
        type: "kv"
      })
    );
  }
  get template() {
    const template = `
    <div %fxFlex% %fxLayout%>
      <canvas baseChart %[data]% %bCustomProps% %style% %class% %[datasets]% %[labels]% %[options]% %[colors]% %[legend]% chartType=\"polarArea\" %(chartHover)% %(chartClick)%></canvas>
    </div>`;
    return template;
  }
  set template(templateString) {}
};
