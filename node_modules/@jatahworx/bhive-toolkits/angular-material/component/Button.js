'use strict';
let Attribute = require('../../core/Attributes');
let Component = require('../../core/Component');

module.exports = class Button extends Component {
  constructor() {
    const name = 'NG-button';
    const designerTemplate = `<div class=\"ad-button non-dropable-comp-border form-control-comp\">
                                    <span class="component-placeholder">Button</span>
                                  </div>`;
    const paletteTemplate = 'Button';
    const componentLabel = 'Button';
    const templateUrl =
      'articles/#!components-guide-7/button';

    super({
      name: name,
      designerTemplate: designerTemplate,
      paletteTemplate: paletteTemplate,
      componentLabel: componentLabel,
      templateUrl: templateUrl
    }
      
    );

    super.addAttribute(
      new Attribute({
        key: 'buttonname',
        value: 'Button',
        type: 'a',
        useAsLabel: true,
      })
    );
    super.addAttribute(new Attribute({
      key: 'color',
      value: '',
      type: 'kv'
    }));
    super.addAttribute(
      new Attribute({
        key: '(click)',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: '[disabled]',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: '[disableRipple]',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(new Attribute({
      key: 'type',
      value: '',
      type: 'kv'
    }));
    super.addAttribute(
      new Attribute({
        key: 'routerLink',
        value: '',
        type: 'kv'
      })
    );
    super.setType(Component.COMPONENT_TYPE_TITLES.FORM_CONTROLS.val);
  }
  get template() {
    const template = `<button mat-button %style% %class% %bCustomProps% %color% %(click)% %[disabled]% %[disableRipple]% %type% %routerLink%>%buttonname%</button>`;
    return template;
  }
  set template(templateString) {}
};