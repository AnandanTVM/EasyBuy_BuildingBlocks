'use strict';
let Attribute = require('../../core/Attributes');
let Component = require('../../core/Component');

module.exports = class ButtonToggle extends Component {
  constructor() {
    const name = 'NG-button-Toggle';
    const designerTemplate = `<div class=\"non-dropable-comp-border form-control-comp\">
                                  <div class="ad-button-toggle icon-size height-100"></div>
                                  </div>`;
    const paletteTemplate = 'Button Toggle';
    const componentLabel = 'Button Toggle';
    const templateUrl =
      'articles/#!components-guide-7/button-toggle';

    super({
      name: name,
      designerTemplate: designerTemplate,
      paletteTemplate: paletteTemplate,
      componentLabel: componentLabel,
      templateUrl: templateUrl,
      visible: false
    }

    );

    super.addAttribute(new Attribute({
      key: 'value',
      value: '',
      type: 'kv'
    }));
    super.addAttribute(
      new Attribute({
        key: 'buttonname',
        value: '',
        type: 'a',
        useAsLabel: true,
      })
    );
    super.addAttribute(new Attribute({
      key: 'name',
      value: '',
      type: 'kv'
    }));
    super.addAttribute(new Attribute({
      key: 'id',
      value: '',
      type: 'kv'
    }));
    super.addAttribute(
      new Attribute({
        key: 'checked',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: '(change)',
        value: '',
        type: 'kv'
      })
    );
    super.addAttribute(
      new Attribute({
        key: '(click)',
        value: '',
        type: 'kv'
      })
    );
    super.setType(Component.COMPONENT_TYPE_TITLES.FORM_CONTROLS.val);
  }
  get template() {
    const template = `<mat-button-toggle %id% %name% %checked% %(click)% %value% %bCustomProps% %(change)% %style% %class%>%buttonname%</mat-button-toggle>`;
    return template;
  }
  set template(templateString) { }
};