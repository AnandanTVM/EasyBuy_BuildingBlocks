"use strict";
let AdvancedComponent = require("../../../core/AdvancedComponent");
let Attribute = require('../../../core/Attributes');

module.exports = class InputHint extends AdvancedComponent {
  constructor() {
    const name = "ng-input-hint";
    const designerTemplate = '<ng-input-hint></ng-input-hint>';
    const paletteTemplate = 'Input Hint';
    const componentLabel = 'Input Hint';

    super({
      name,
      designerTemplate,
      paletteTemplate,
      componentLabel,
      isAdvancedChild: true,
      templateUrl: "articles/#!components-guide-7/input"
    });
    super.addAttribute(new Attribute({
      key: 'inputHint',
      value: [],
      type: 'a',
      visible: false,
      isVisibleForParent: true
    }));
    super.composeTemplate();
  }

  fromParent(parentInstance) {
  }

  get template() {
    let returnTemplate = '';
    let inputHintAttribute = this.getHtmlAttributes(this.htmlAttributes);
    let hintList = inputHintAttribute['inputHint']._value instanceof Array && inputHintAttribute['inputHint']._value.length > 0 ? inputHintAttribute['inputHint']._value : [];
    for (let i = 0; i < hintList.length; i++) {
      if (hintList[i].toggle && hintList[i].input1 && hintList[i].input2) {
        returnTemplate += `<mat-hint align="${hintList[i].toggle.selected}" *ngIf="${hintList[i].input1}">${hintList[i].input2}</mat-hint>`;
      } else if (hintList[i].input1 && hintList[i].input2) {
        returnTemplate += `<mat-hint *ngIf="${hintList[i].input1}">${hintList[i].input2}</mat-hint>`;
      }
    }
    return returnTemplate;
  }

  set template(t) { }
};
