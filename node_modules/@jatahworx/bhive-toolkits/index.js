let LayoutAlign = require('./attributeTypes/LayoutAlign');
let PLayoutAlign = require('./attributeTypes/PLayoutAlign');
let FXDir = require('./attributeTypes/FXDir');
let FXFill = require('./attributeTypes/FXFill')
let ComponentLabel = require('./attributeTypes/ComponentLabel')
let ShowTableHeader = require('./attributeTypes/ShowTableHeader');
let ImgSecure = require('./attributeTypes/IsSecure');
let ShowXAxisLabel = require('./attributeTypes/ShowXAxisLabel');
let ShowYAxisLabel = require('./attributeTypes/ShowYAxisLabel');
let xAxis = require('./attributeTypes/XAxis');
let yAxis = require('./attributeTypes/YAxis');
let legend = require('./attributeTypes/Legends');
let showGridLines = require('./attributeTypes/ShowGridLines');
let autoScale = require('./attributeTypes/AutoScale');
let timeline = require('./attributeTypes//Timeline');
let animations = require('./attributeTypes/Animation');
let scheme = require('./attributeTypes/Scheme');
let schemeType = require('./attributeTypes/SchemeType');
let color = require('./attributeTypes/Color');
let align = require('./attributeTypes/Align');
let mode = require('./attributeTypes/Mode');
let startView = require('./attributeTypes/StartView');
let tooltipPosition = require('./attributeTypes/TooltipPosition');
let sidenavmode = require('./attributeTypes/SidenavMode');
let sidenavPosition = require('./attributeTypes/SidenavPosition');
let MatSortHeader = require('./attributeTypes/MatSortHeader');
let MatSortHeaderColumn = require('./attributeTypes/MatSortHeaderColumn');
let roundDomains = require('./attributeTypes/RoundDomains');
let fxShow = require('./attributeTypes/fxShow');
let fxHide = require('./attributeTypes/fxHide');
let multi = require('./attributeTypes/ExpansionPanelMulti');
let disabled = require('./attributeTypes/Disabled');
let hideToggle = require('./attributeTypes/HideToggle');
let linear = require('./attributeTypes/StepperLinear');
let haserror = require('./attributeTypes/HasError');
let optional = require('./attributeTypes/Optional');
let interacted = require('./attributeTypes/Interacted');
let completed = require('./attributeTypes/Completed');
let editable = require('./attributeTypes/Editable');
let showAxis = require('./attributeTypes/ShowAxis');
let tooltipDisabled = require('./attributeTypes/TooltipDisabled');
let explodeSlices = require('./attributeTypes/ExplodeSlices');
let doughnut = require('./attributeTypes/Doughnut');
let trimLabels = require('./attributeTypes/TrimLabels');
let showlabels = require('./attributeTypes/PieChartLabel');
let showRefLines = require('./attributeTypes/ShowReflines');
let showRefLabel = require('./attributeTypes/ShowRefLabel');
let showDataLabel = require('./attributeTypes/ShowDataLabel');
let labelPosition = require('./attributeTypes/RadioLabelPosition');
let disableRipple = require('./attributeTypes/DisableRipple');
let checked = require('./attributeTypes/Checked');
let indeterminate = require('./attributeTypes/Indeterminate');
let disableDragValue = require('./attributeTypes/DisableDragValue');
let disableToggleValue = require('./attributeTypes/DisableToggleValue');
let opened = require('./attributeTypes/Opened');
let invert = require('./attributeTypes/SliderInvert');
let thumblabel = require('./attributeTypes/SliderThumblabel');
let vertical = require('./attributeTypes/SliderVertical');
let autofocus = require('./attributeTypes/AutoFocus');
let disableClose = require('./attributeTypes/DisableClose');
let autosize = require('./attributeTypes/AutoSize');
let fixedInViewPort = require('./attributeTypes/FixedInViewPort');
let hasBackDrop = require('./attributeTypes/HasBackDrop');
let overlapTrigger = require('./attributeTypes/OverLapTrigger');
let dynamicHeight = require('./attributeTypes/DynamicHeight');
let isActive = require('./attributeTypes/IsActive');
let wrap = require('./attributeTypes/Wrap');
let MatError = require('./attributeTypes/MatError');
let Assetsrc = require('./attributeTypes/ImageSrc');
let cardtitlegroupimage = require('./attributeTypes/CardTitleGroupImages');
let formfieldAppearance = require('./attributeTypes/Appearance');
let inputhintalign = require('./attributeTypes/InputHintAlign');
let inputFloatLabel = require('./attributeTypes/InputFloatLabel');
let inputHint = require('./attributeTypes/MatHint');
let datepickerTouchUi = require('./attributeTypes/DatapickerTouchUi');
let disableDatepicker = require('./attributeTypes/DisableDatepicker');
let disableDatepickerIcon = require('./attributeTypes/DisableDatePickerIcon');
let disableDatepickerInput = require('./attributeTypes/DisableDatepickerInput');
let lazyLoading = require('./attributeTypes/LazyLoading');
let tabHeaderPostion = require('./attributeTypes/TabHeaderPosition');
let matTabAlign = require('./attributeTypes/MatTabAlign');
let strechTab = require('./attributeTypes/StretchTabs');
let dynamicTab = require('./attributeTypes/DynamicTab');

let Html5 = require('./attributeTypes/Html5').htmlElement;
let multipleselect = require('./attributeTypes/MultipleSelect');
let selectstyle = require('./attributeTypes/SelectStyle');
let selectcustomOption = require('./attributeTypes/SelectCustomOption');
let floatlabel = require('./attributeTypes/FloatLabel');
let requiredField = require('./attributeTypes/Required');
let groupOptions = require('./attributeTypes/GroupOptions');
let autoAudioPlay = require('./attributeTypes/Autoplay');
let audioPlayLoop = require('./attributeTypes/AudioplayLoop');
let datepickerIconPosition = require('./attributeTypes/DatepickerIconPosition');
let audioSource = require('./attributeTypes/AudioSource');
let videoSource = require('./attributeTypes/VideoSource');
let CssClass = require('./attributeTypes/CssClass');
let hideRequiredMarker = require('./attributeTypes/HideRequiredMarker')
let chipListSelectable = require('./attributeTypes/ChipListSelectable');
let focused = require('./attributeTypes/Focused');
let errorState = require('./attributeTypes/Errorstate');
let selectable = require('./attributeTypes/Selectable');
let removable = require('./attributeTypes/Removable');
let selected = require('./attributeTypes/Selected');
let multiple = require('./attributeTypes/Multiple');
let showIconBeforeLabel = require('./attributeTypes/ShowIconBeforeLabel');
let showIconAfterLabel = require('./attributeTypes/ShowIconAfterLabel');
let autoActiveFirstOption = require('./attributeTypes/AutoActiveFirstOption');
let IconBeforeLabelClass = require('./attributeTypes/IconBeforeLabelClass');
let IconAfterLabelClass = require("./attributeTypes/IconAfterLabelClass");
let tabIconClass = require("./attributeTypes/tabIconClass");
let buttonToggleAppearance = require("./attributeTypes/ButtonToggleAppearance");

let buttonToggleAppearanceArray = [
    { display: "Legacy", value: "'legacy'" },
    { display: "Standard ", value: "'standard'" }
];

let SidenavHasBackDrop = require("./attributeTypes/SidenavHasBackDrop");

let progressSpinnerModeArray = [
    { display: "Indeterminate", value: "'indeterminate'", default: true },
    { display: "Determinate", value: "'determinate'" }
];

let progressBarModeArray = [
    { display: "Determinate", value: "'determinate'", default: true },
    { display: "Indeterminate", value: "'indeterminate'" },
    { display: "Buffer", value: "'buffer'" },
    { display: "Query", value: "'query'" }
];

let signatureWidgetModeArray = [
    { display: "Responsive", value: "'responsive'" },
    { display: "Click-fullscreen", value: "'click-fullscreen'" }
];

let attributeTypes = {
    class: new CssClass('class'),
    panelClass: new CssClass('panelClass'),
    columnclass: new CssClass('columnclass'),
    headerclass: new CssClass('headerclass'),
    layoutAlign: new LayoutAlign(),
    pLayoutAlign: new PLayoutAlign(),
    dir: new FXDir(),
    fxFill: new FXFill(),
    componentLabel: new ComponentLabel(),
    '[showXAxisLabel]': new ShowXAxisLabel(),
    '[showYAxisLabel]': new ShowYAxisLabel(),
    '[xAxis]': new xAxis(),
    '[yAxis]': new yAxis(),
    '[legend]': new legend(),
    '[showGridLines]': new showGridLines(),
    '[autoScale]': new autoScale(),
    '[timeline]': new timeline(),
    '[animations]': new animations(),
    '[scheme]': new scheme(),
    '[schemeType]': new schemeType(),
    'color': new color(),
    'align': new align(),
    'startView': new startView(),
    'matTooltipPosition': new tooltipPosition(),
    '[sidenavMode]': new sidenavmode(),
    '[sidenavPosition]': new sidenavPosition(),
    header: new ShowTableHeader(),
    imgSecure: new ImgSecure(),
    matSortHeader: new MatSortHeader(),
    matSortHeaderColumn: new MatSortHeaderColumn(),
    '[roundDomains]': new roundDomains(),
    '[fxShow]': new fxShow(),
    '[fxHide]': new fxHide(),
    'multi': new multi(),
    '[disabled]': new disabled(),
    'hideToggle': new hideToggle(),
    '[linear]': new linear(),
    'hasError': new haserror(),
    'optional': new optional(),
    'interacted': new interacted(),
    'completed': new completed(),
    'editable': new editable(),
    '[showAxis]': new showAxis(),
    '[tooltipDisabled]': new tooltipDisabled(),
    '[explodeSlices]': new explodeSlices(),
    '[doughnut]': new doughnut(),
    '[trimLabels]': new trimLabels(),
    pieChartLabels: new showlabels(),
    '[showRefLines]': new showRefLines(),
    '[showRefLabels]': new showRefLabel(),
    '[showDataLabel]': new showDataLabel(),
    '[labelPosition]': new labelPosition(),
    '[disableRipple]': new disableRipple(),
    '[checked]': new checked(),
    '[indeterminate]': new indeterminate(),
    '[disableDragValue]': new disableDragValue(),
    '[disableToggleValue]': new disableToggleValue(),
    '[opened]': new opened(),
    'invert': new invert(),
    'thumbLabel': new thumblabel(),
    '[vertical]': new vertical(),
    'autoFocus': new autofocus(),
    'disableClose': new disableClose(),
    'autosize': new autosize(),
    'fixedInViewport': new fixedInViewPort(),
    'hasBackdrop': new hasBackDrop(),
    'overlapTrigger': new overlapTrigger(),
    'dynamicHeight': new dynamicHeight(),
    '[isActive]': new isActive(),
    'wrap': new wrap(),
    matError: new MatError(),
    'imgSrc': new Assetsrc(),
    'imageType': new cardtitlegroupimage(),
    "htmlElement": new Html5(),
    "[appearance]": new formfieldAppearance(),
    'hintAlign': new inputhintalign(),
    '[floatLabel]': new inputFloatLabel(),
    inputHint: new inputHint(),
    'touchUi': new datepickerTouchUi(),
    '[disabledDatepicker]': new disableDatepicker(),
    '[disabledDatepickerIcons]': new disableDatepickerIcon(),
    '[disabledDatepickerInput]': new disableDatepickerInput(),

    'lazyLoading': new lazyLoading(),
    'headerPosition': new tabHeaderPostion(),
    'matAlignTabs': new matTabAlign(),
    'stretchTabs': new strechTab(),
    'dynamicTab': new dynamicTab(),
    'multiple': new multipleselect(),
    'selectStyle': new selectstyle(),
    'selectCustomOption': new selectcustomOption(),
    '[floatLabel]': new floatlabel(),
    '[required]': new requiredField(),
    '[groupOptions]': new groupOptions(),
    '[autoplay]': new autoAudioPlay(),
    '[loop]': new audioPlayLoop(),
    '[iconPosition]': new datepickerIconPosition(),
    'audioSource': new audioSource(),
    'videoSource': new videoSource(),
    '[hideRequiredMarker]': new hideRequiredMarker(),
    'chipListSelectable': new chipListSelectable(),
    'focused': new focused(),
    'errorState': new errorState(),
    '[multiple]': new multiple(),
    'showIconBeforeLabel': new showIconBeforeLabel(),
    'showIconAfterLabel': new showIconAfterLabel(),
    '[selectable]': new selectable(),
    '[removable]': new removable(),
    '[selected]': new selected(),
    'autoActiveFirstOption': new autoActiveFirstOption(),
    'IconBeforeLabelClass': new IconBeforeLabelClass(),
    'IconAfterLabelClass': new IconAfterLabelClass(),
    'tabIconClass': new tabIconClass(),
    '[buttonToggleAppearance]': new buttonToggleAppearance('buttonToggleAppearance', buttonToggleAppearanceArray),
    '[hasBackdrop]': new SidenavHasBackDrop(),
    '[progressSpinnerMode]': new mode('progressSpinnerMode', progressSpinnerModeArray),
    '[progressBarMode]': new mode('progressBarMode', progressBarModeArray),
    '[signatureWidgetMode]': new mode('signatureWidgetMode', signatureWidgetModeArray)
}

module.exports = {
    "NGMaterialToolkit": require('./angular-material/NGMaterialToolkit'),
    "Component": require('./core/Component'),
    "Attribute": require("./core/Attributes"),
    "AttributeTypes": attributeTypes,
    "View": require('./core/View'),
    "AdvancedComponent": require('./core/AdvancedComponent'),
    "SRDCodeGenUtil": require('./util/SRDCodeGenUtil'),
    "BaseComponent": require('./core/BaseComponent'),
    "BGuid": require('./util/BGuid')
}